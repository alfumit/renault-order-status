{"version":3,"sources":["components/CarCard/CarImage/CarImage.tsx","contexts/CarContext.ts","components/CarCard/CarStatus/CarStatus.tsx","components/CarCard/CarCard.tsx","mocks/red-white-car.ts","services/carsApi.ts","components/VinInput/VinInput.tsx","components/Footer/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/images/cars/unknown.png","assets/images/cars/YNL.png","assets/images/cars/YQZ.png","assets/images/cars/YQY.png","assets/images/cars/D17.png","assets/images/cars/D69.png","assets/images/cars/KAD.png","assets/images/cars/NPI.png","assets/images/cars/RQH.png","assets/images/cars/XTK.png","assets/images/cars/XTL.png","assets/images/cars/XTM.png","assets/images/cars/XTN.png","assets/images/cars/XTP.png","assets/images/cars/XTR.png","assets/images/cars/XUE.png","assets/images/cars/XVQ.png","assets/images/cars/YNN.png","assets/images/cars/YQX.png","assets/images/cars/YRA.png","assets/images/cars/YRB.png","assets/images/cars/YRC.png"],"names":["images","yqy","ynl","yqz","d17","d69","kad","npi","rqh","xtk","xtl","xtm","xtn","xtp","xtr","xue","xvq","ynn","yqx","yra","yrb","yrc","useStyles","makeStyles","carImage","maxWidth","maxHeight","CarImage","props","carColor","classes","className","src","toLowerCase","unknown","alt","CarContext","React","createContext","loading","useMock","carData","setCarData","setLoading","setUseMock","passed","color","stepsContainer","padding","step","display","justifyItems","CarStatus","useContext","status","Typography","variant","gutterBottom","Grid","container","justify","map","item","index","xs","sm","md","key","Icon","root","minWidth","bullet","margin","transform","title","fontSize","pos","marginBottom","CarCard","console","log","Card","CircularProgress","length","CardContent","align","model","version","replace","Date","realdt","toDateString","toTimeString","plandt","alignContent","CardActions","Button","size","style","deldt","effdt","indt","madcdt","miledt","orderdt","outdt","pickdt","apiHost","checkStatus","vin","reqUrl","axios","get","getDates2","getDates6","getCarInfo","theme","header","paddingBottom","width","breakpoints","down","buttons","marginTop","VinInput","useState","setVin","requestError","setRequestError","Promise","resolve","redWhite","all","then","res","data","attributes","getAllData","catch","err","message","finally","alignItems","TextField","id","label","required","helperText","error","value","onChange","e","vinFieldValue","target","ButtonGroup","onClick","position","bottom","background","borderTop","Footer","Link","href","vinHeader","App","carContextValue","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.10d7376c.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport unknown from '../../../assets/images/cars/unknown.png';\nimport ynl from '../../../assets/images/cars/YNL.png';\nimport yqz from '../../../assets/images/cars/YQZ.png';\nimport yqy from '../../../assets/images/cars/YQY.png';\n// import i369 from '../../assets/images/i369.png';\n// import i676 from '../../assets/images/i676.png';\nimport d17 from '../../../assets/images/cars/D17.png';\nimport d69 from '../../../assets/images/cars/D69.png';\nimport kad from '../../../assets/images/cars/KAD.png';\nimport npi from '../../../assets/images/cars/NPI.png';\nimport rqh from '../../../assets/images/cars/RQH.png';\nimport xtk from '../../../assets/images/cars/XTK.png';\nimport xtl from '../../../assets/images/cars/XTL.png';\nimport xtm from '../../../assets/images/cars/XTM.png';\nimport xtn from '../../../assets/images/cars/XTN.png';\nimport xtp from '../../../assets/images/cars/XTP.png';\nimport xtr from '../../../assets/images/cars/XTR.png';\nimport xue from '../../../assets/images/cars/XUE.png';\nimport xvq from '../../../assets/images/cars/XVQ.png';\nimport ynn from '../../../assets/images/cars/YNN.png';\nimport yqx from '../../../assets/images/cars/YQX.png';\nimport yra from '../../../assets/images/cars/YRA.png';\nimport yrb from '../../../assets/images/cars/YRB.png';\nimport yrc from '../../../assets/images/cars/YRC.png';\n\nconst images: any = {\n  yqy,\n  ynl,\n  yqz,\n  // i369,\n  // i676,\n  d17,\n  d69,\n  kad,\n  npi,\n  rqh,\n  xtk,\n  xtl,\n  xtm,\n  xtn,\n  xtp,\n  xtr,\n  xue,\n  xvq,\n  ynn,\n  yqx,\n  yra,\n  yrb,\n  yrc,\n};\n\nconst useStyles = makeStyles({\n  carImage: {\n    maxWidth: '100%',\n    maxHeight: '12rem',\n  },\n});\n\nconst CarImage = (props: any) => {\n  const { carColor } = props;\n  const classes = useStyles();\n\n  return (\n    <figure>\n      <img className={classes.carImage} src={images[carColor.toLowerCase()] || unknown} alt=\"You car image\" />\n    </figure>\n  );\n};\n\nexport default CarImage;\n","import React from 'react';\n\nconst CarContext = React.createContext({\n  loading: false,\n  useMock: false,\n  carData: [] as any,\n  setCarData: (props: any): any => {},\n  setLoading: (props: any): any => {},\n  setUseMock: (props: any): any => {},\n});\n\nexport default CarContext;\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Icon, Typography } from '@material-ui/core';\nimport CarContext from '../../../contexts/CarContext';\n\nconst useStyles = makeStyles({\n  passed: {\n    color: 'green',\n  },\n  stepsContainer: {\n    padding: '0 2rem',\n  },\n  step: {\n    display: 'flex',\n    justifyItems: 'center',\n    padding: '.25rem 0',\n  },\n});\n\nconst CarStatus = (props: any) => {\n  const { carData } = useContext(CarContext);\n  const classes = useStyles();\n  const { status } = carData[0];\n  const steps = ['Order confirmed', 'Car ready', 'Car ready 2', 'On it\\'s way to dealer',\n    'Delivered to dealer', 'Received by customer'/* , 'Making PTS', 'PTS ready' */];\n\n  return (\n    <div>\n      <Typography variant=\"h4\" gutterBottom>Detailed status of your order:</Typography>\n      <Grid container className={classes.stepsContainer} justify=\"center\">\n        {steps.map((item, index) => (\n          <Grid item xs={12} sm={6} md={4} key={item} className={index < status ? classes.passed : ''}>\n            <div className={classes.step}>\n              {index < status && <Icon>check_circle_outline</Icon>}\n              {index >= status && <Icon>highlight_off</Icon>}\n              {` Step ${index + 1}: ${item}`}\n            </div>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default CarStatus;\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { CircularProgress, Grid } from '@material-ui/core';\nimport CarImage from './CarImage/CarImage';\nimport CarContext from '../../contexts/CarContext';\nimport CarStatus from './CarStatus/CarStatus';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function CarCard() {\n  const classes = useStyles();\n  const { carData, loading } = useContext(CarContext);\n  console.log('carData', carData);\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      {loading && <CircularProgress />}\n      {!loading && carData.length && (\n      <CardContent>\n        <Grid container>\n          <Grid item xs={12} md={6}>\n            <Typography className={classes.root} align=\"left\" color=\"textPrimary\" gutterBottom>\n              Order information\n            </Typography>\n            <hr />\n            <Typography className={classes.title} align=\"left\" color=\"textSecondary\" gutterBottom>\n              Your car color is\n              {' '}\n              { carData[1].color}\n            </Typography>\n            <Typography className={classes.title} align=\"left\" color=\"textSecondary\" gutterBottom>\n              Your car model is Renault\n              {' '}\n              { carData[1].model }\n              {' '}\n              { carData[1].version.replace(/_/g, ' ') }\n            </Typography>\n            <Typography className={classes.title} align=\"left\" color=\"textSecondary\" gutterBottom>\n              Expected time of production\n              {' '}\n              { new Date(carData[2].realdt).toDateString() }\n              {' '}\n              { new Date(carData[2].realdt).toTimeString() }\n            </Typography>\n            <Typography className={classes.title} align=\"left\" color=\"textSecondary\" gutterBottom>\n              Planned time of production\n              {' '}\n              { new Date(carData[2].plandt).toDateString() }\n              {' '}\n              { new Date(carData[2].plandt).toTimeString() }\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <CarImage carColor={carData[1].color} />\n          </Grid>\n        </Grid>\n        <Grid container alignContent=\"center\" justify=\"center\">\n          <Grid item xs={12}>\n            <CarStatus />\n          </Grid>\n        </Grid>\n      </CardContent>\n      )}\n      {!loading && !carData.length && <h1>No car data</h1>}\n      {!loading && carData.length && (\n      <CardActions>\n        <Button size=\"small\" style={{ margin: '0 auto' }} variant=\"outlined\">Subscribe to telegram bot</Button>\n      </CardActions>\n      )}\n    </Card>\n  );\n}\n","export default [{ status: 10 },\n  { color: 'YQZ', model: 'KAPTUR', version: 'Style_TCe150_4x4_CVT_X-Tronic' },\n  { plandt: '2020-08-23T20:38:27.399345+00:00', realdt: '2020-08-23T20:38:27.12661+00:00' },\n  {\n    deldt: '2020-08-24T00:00:00+00:00',\n    effdt: null,\n    indt: '2020-08-05T00:00:00+00:00',\n    madcdt: '2020-07-30T11:55:50+00:00',\n    miledt: '2020-07-30T12:03:01+00:00',\n    orderdt: '2020-08-17T00:00:00+00:00',\n    outdt: '2020-08-05T06:32:33+00:00',\n    pickdt: null,\n  }];\n","import axios from 'axios';\nimport redWhite from '../mocks/red-white-car';\n\nconst apiHost = 'https://rdwapp.renault.ru/api/v1';\n\nconst checkStatus = (vin: string) => {\n  const reqUrl = `${apiHost}/status/${vin}`;\n  return axios.get(reqUrl);\n};\n\nconst getDates2 = (vin: string) => {\n  const reqUrl = `${apiHost}/dates2/${vin}`;\n  return axios.get(reqUrl);\n};\n\nconst getDates6 = (vin: string) => {\n  const reqUrl = `${apiHost}/dates6/${vin}`;\n  return axios.get(reqUrl);\n};\n\nconst getCarInfo = (vin: string) => {\n  const reqUrl = `${apiHost}/info/${vin}`;\n  return axios.get(reqUrl);\n};\n\nconst getAllData = (vin: string, useMock?: boolean) => {\n  if (useMock) return Promise.resolve(redWhite);\n\n  return Promise.all([checkStatus(vin),\n    getCarInfo(vin), getDates2(vin), getDates6(vin)])\n    .then((res) => Promise.resolve(res.map((item) => item.data.data[0].attributes)));\n};\n\nexport {\n  checkStatus, getCarInfo, getDates2, getDates6, getAllData,\n};\n","import React, { useContext, useState } from 'react';\nimport {\n  Button, ButtonGroup, Grid, TextField, Typography, Theme,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport CarContext from '../../contexts/CarContext';\nimport { getAllData } from '../../services/carsApi';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  header: {\n    paddingBottom: '1rem',\n  },\n  root: {\n    width: '60%',\n  },\n  [theme.breakpoints.down('sm')]: {\n    root: {\n      width: '80%',\n    },\n  },\n  [theme.breakpoints.down('xs')]: {\n    buttons: {\n      marginTop: '1rem',\n    },\n  },\n}));\n\nconst VinInput: React.FC = () => {\n  const [vin, setVin] = useState('');\n  const [requestError, setRequestError] = useState(false);\n  const {\n    carData, setCarData, setLoading, useMock, setUseMock,\n  } = useContext(CarContext);\n  const classes = useStyles();\n\n  const vinHandler = (vinFieldValue: string) => {\n    setVin(vinFieldValue);\n  };\n\n  const getCarInfo = () => {\n    if (vin || useMock) {\n      setLoading(true);\n      setCarData({});\n      getAllData(vin, useMock)\n        .then((res) => {\n          console.log(res);\n          setCarData(res);\n          setRequestError(false);\n        })\n        .catch((err) => {\n          console.log('Unable to fetch data', err.message);\n          setRequestError(true);\n        })\n        .finally(() => setLoading(false));\n    } else {\n      setRequestError(true);\n      console.log('Please enter something');\n    }\n  };\n\n  const toggleMockData = () => setUseMock(!useMock);\n\n  return (\n    <div className={classes.root}>\n      <Grid container justify=\"center\">\n        <Typography variant=\"h4\">\n          Please enter your VIN code\n        </Typography>\n      </Grid>\n      <Grid container justify=\"space-between\" alignItems=\"center\">\n        <Grid item sm={6} xs={12}>\n          <TextField\n            id=\"vin\"\n            variant=\"outlined\"\n            label=\"VIN\"\n            required\n            helperText={requestError ? 'Incorrect VIN' : ''}\n            error={requestError}\n            value={vin}\n            onChange={(e) => vinHandler(e.target.value)}\n          />\n        </Grid>\n        <Grid item sm={6} xs={12} className={classes.buttons}>\n          <ButtonGroup size=\"medium\">\n            <Button variant=\"contained\" color=\"primary\" size=\"medium\" onClick={() => getCarInfo()}>Get Info</Button>\n            <Button variant={useMock ? 'contained' : 'outlined'} color=\"secondary\" size=\"medium\" onClick={() => toggleMockData()}>\n              { useMock ? 'Use API' : 'Use Mock' }\n            </Button>\n          </ButtonGroup>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default VinInput;\n","import React from 'react';\nimport { Grid, Link, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    bottom: 0,\n    background: '#FFF',\n    borderTop: '1px solid gray',\n  },\n});\n\nconst Footer = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid container justify=\"center\" alignItems=\"center\" className={classes.root}>\n      <Typography variant=\"caption\">This is not an official service. User at your own risk. </Typography>\n      <Typography variant=\"caption\">\n        <Link href=\"https://github.com/alfumit/renault-order-status\">\n          Github Repository\n        </Link>\n      </Typography>\n    </Grid>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport CarCard from './components/CarCard/CarCard';\nimport VinInput from './components/VinInput/VinInput';\nimport CarContext from './contexts/CarContext';\nimport Footer from './components/Footer/Footer';\n\nconst useStyles = makeStyles({\n  vinHeader: {\n    padding: '1rem 0',\n  },\n});\n\nfunction App() {\n  const [carData, setCarData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [useMock, setUseMock] = useState(false);\n  const carContextValue = {\n    loading, carData, useMock, setCarData, setLoading, setUseMock,\n  };\n  const classes = useStyles();\n\n  return (\n    <CarContext.Provider value={carContextValue as any}>\n      <div className=\"App\">\n        <Grid container className={classes.vinHeader} alignContent=\"center\" justify=\"center\">\n          <VinInput />\n        </Grid>\n        <Grid container justify=\"center\" alignContent=\"center\">\n          <CarCard />\n        </Grid>\n      </div>\n      <Footer />\n    </CarContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/unknown.49d99b9f.png\";","module.exports = __webpack_public_path__ + \"static/media/YNL.6955fcb6.png\";","module.exports = __webpack_public_path__ + \"static/media/YQZ.8314be94.png\";","module.exports = __webpack_public_path__ + \"static/media/YQY.ddfee3ae.png\";","module.exports = __webpack_public_path__ + \"static/media/D17.c393476d.png\";","module.exports = __webpack_public_path__ + \"static/media/D69.da680879.png\";","module.exports = __webpack_public_path__ + \"static/media/KAD.64992532.png\";","module.exports = __webpack_public_path__ + \"static/media/NPI.8b143404.png\";","module.exports = __webpack_public_path__ + \"static/media/RQH.ddd1999f.png\";","module.exports = __webpack_public_path__ + \"static/media/XTK.6ffc23b3.png\";","module.exports = __webpack_public_path__ + \"static/media/XTL.ca4c1e4c.png\";","module.exports = __webpack_public_path__ + \"static/media/XTM.2d467ac1.png\";","module.exports = __webpack_public_path__ + \"static/media/XTN.9ac98779.png\";","module.exports = __webpack_public_path__ + \"static/media/XTP.a4f80941.png\";","module.exports = __webpack_public_path__ + \"static/media/XTR.1674ec61.png\";","module.exports = __webpack_public_path__ + \"static/media/XUE.05aeb129.png\";","module.exports = __webpack_public_path__ + \"static/media/XVQ.002ac380.png\";","module.exports = __webpack_public_path__ + \"static/media/YNN.fdf20c06.png\";","module.exports = __webpack_public_path__ + \"static/media/YQX.070b4158.png\";","module.exports = __webpack_public_path__ + \"static/media/YRA.ca8584ce.png\";","module.exports = __webpack_public_path__ + \"static/media/YRB.203f1210.png\";","module.exports = __webpack_public_path__ + \"static/media/YRC.0a26def1.png\";"],"sourceRoot":""}