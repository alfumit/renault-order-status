{"version":3,"sources":["contexts/CarContext.ts","contexts/MessageContext.ts","components/Footer/Footer.tsx","components/RosSnackbar/RosSnackbar.tsx","mocks/red-white-car.ts","services/carsApi.ts","components/VinInput/VinInput.tsx","components/CarCard/CarImage/CarImage.tsx","components/CarCard/CarStatus/CarStatus.tsx","components/CarCard/CarCard.tsx","hooks/query.ts","pages/CarPage.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/images/cars/unknown.png","assets/images/cars/YNL.png","assets/images/cars/YQZ.png","assets/images/cars/YQY.png","assets/images/cars/D17.png","assets/images/cars/D69.png","assets/images/cars/KAD.png","assets/images/cars/NPI.png","assets/images/cars/RQH.png","assets/images/cars/XTK.png","assets/images/cars/XTL.png","assets/images/cars/XTM.png","assets/images/cars/XTN.png","assets/images/cars/XTP.png","assets/images/cars/XTR.png","assets/images/cars/XUE.png","assets/images/cars/XVQ.png","assets/images/cars/YNN.png","assets/images/cars/YQX.png","assets/images/cars/YRA.png","assets/images/cars/YRB.png","assets/images/cars/YRC.png"],"names":["CarContext","React","createContext","loading","useMock","carData","setCarData","props","setLoading","setUseMock","MessageContext","open","message","setOpen","setMessage","useStyles","makeStyles","root","position","bottom","background","borderTop","padding","textAlign","Footer","classes","Grid","container","justify","alignItems","className","Typography","variant","Link","href","opacity","RosSanckbar","useContext","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","action","IconButton","size","aria-label","color","onClick","Icon","status","model","version","plandt","realdt","deldt","effdt","indt","madcdt","miledt","orderdt","outdt","pickdt","apiHost","checkStatus","vin","reqUrl","axios","get","getDates2","getDates6","getCarInfo","theme","header","paddingBottom","width","breakpoints","down","buttons","marginTop","VinInput","vinParam","useState","setVin","requestError","setRequestError","Promise","resolve","redWhite","all","then","res","map","item","data","attributes","getAllData","console","log","catch","finally","useEffect","sm","xs","TextField","id","label","required","helperText","error","value","onChange","e","vinFieldValue","target","trim","ButtonGroup","Button","images","yqy","ynl","yqz","d17","d69","kad","npi","rqh","xtk","xtl","xtm","xtn","xtp","xtr","xue","xvq","ynn","yqx","yra","yrb","yrc","carImage","maxWidth","maxHeight","CarImage","carColor","src","toLowerCase","unknown","alt","passed","stepsContainer","step","display","justifyItems","CarStatus","gutterBottom","index","md","key","minWidth","bullet","margin","transform","title","fontSize","pos","marginBottom","CarCard","Card","CircularProgress","length","CardContent","align","replace","Date","toDateString","toTimeString","alignContent","CardActions","style","useQuery","URLSearchParams","useLocation","search","vinHeader","CarPage","query","App","openMessage","setOpenMessage","carContextValue","messageContextValue","Provider","path","RosSnackbar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e8acdd59.chunk.js","sourcesContent":["import React from 'react';\n\nconst CarContext = React.createContext({\n  loading: false,\n  useMock: false,\n  carData: [] as any,\n  setCarData: (props: any): any => {},\n  setLoading: (props: any): any => {},\n  setUseMock: (props: any): any => {},\n});\n\nexport default CarContext;\n","import React from 'react';\n\ninterface Message {\n  open: boolean,\n  message: string,\n  setOpen: Function,\n  setMessage: Function,\n}\n\nconst MessageContext = React.createContext<Message>({\n  open: false,\n  message: 'Oops! Something happened',\n  setOpen: () => {},\n  setMessage: () => {},\n});\n\nexport default MessageContext;\n","import React from 'react';\nimport { Grid, Link, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    bottom: 0,\n    background: '#FFF',\n    borderTop: '1px solid gray',\n    padding: '.5rem 0',\n    textAlign: 'center',\n  },\n});\n\nconst Footer = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid container justify=\"center\" alignItems=\"center\" className={classes.root}>\n      <Typography variant=\"caption\">\n        This is not an official service. Not used for commercial purposes. Use at your own risk.\n        <Link href=\"https://github.com/alfumit/renault-order-status\">\n          Github Repository\n        </Link>\n      </Typography>\n    </Grid>\n  );\n};\n\nexport default Footer;\n","import React, { useContext } from 'react';\nimport { Icon, IconButton, Snackbar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MessageContext from '../../contexts/MessageContext';\n\nconst useStyles = makeStyles({\n  root: {\n    opacity: 1,\n  },\n});\n\nconst RosSanckbar = (props: any) => {\n  const { open = true, message = 'Default message', setOpen } = useContext(MessageContext);\n  const classes = useStyles();\n\n  const handleClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Snackbar\n        className={classes.root}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        open={open}\n        onClose={handleClose}\n        autoHideDuration={3000}\n        message={message}\n        action={(\n          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n            <Icon>close</Icon>\n          </IconButton>\n          )}\n      />\n    </div>\n  );\n};\n\nexport default RosSanckbar;\n","export default [{ status: 10 },\n  { color: 'YQZ', model: 'KAPTUR', version: 'Style_TCe150_4x4_CVT_X-Tronic' },\n  { plandt: '2020-07-23T20:38:27.399345+00:00', realdt: '2020-07-23T20:38:27.12661+00:00' },\n  {\n    deldt: '2020-07-24T00:00:00+00:00',\n    effdt: null,\n    indt: '2020-07-05T00:00:00+00:00',\n    madcdt: '2020-06-30T11:55:50+00:00',\n    miledt: '2020-06-30T12:03:01+00:00',\n    orderdt: '2020-07-17T00:00:00+00:00',\n    outdt: '2020-07-05T06:32:33+00:00',\n    pickdt: null,\n  }];\n","import axios from 'axios';\nimport redWhite from '../mocks/red-white-car';\n\nconst apiHost = 'https://rdwapp.renault.ru/api/v1';\n\nconst checkStatus = (vin: string) => {\n  const reqUrl = `${apiHost}/status/${vin}`;\n  return axios.get(reqUrl);\n};\n\nconst getDates2 = (vin: string) => {\n  const reqUrl = `${apiHost}/dates2/${vin}`;\n  return axios.get(reqUrl);\n};\n\nconst getDates6 = (vin: string) => {\n  const reqUrl = `${apiHost}/dates6/${vin}`;\n  return axios.get(reqUrl);\n};\n\nconst getCarInfo = (vin: string) => {\n  const reqUrl = `${apiHost}/info/${vin}`;\n  return axios.get(reqUrl);\n};\n\nconst getAllData = (vin: string, useMock?: boolean) => {\n  if (useMock) return Promise.resolve(redWhite);\n\n  return Promise.all([checkStatus(vin),\n    getCarInfo(vin), getDates2(vin), getDates6(vin)])\n    .then((res) => Promise.resolve(res.map((item) => item.data.data[0].attributes)));\n};\n\nexport {\n  checkStatus, getCarInfo, getDates2, getDates6, getAllData,\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  Button, ButtonGroup, Grid, TextField, Typography, Theme,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport CarContext from '../../contexts/CarContext';\nimport { getAllData } from '../../services/carsApi';\nimport MessageContext from '../../contexts/MessageContext';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  header: {\n    paddingBottom: '1rem',\n  },\n  root: {\n    width: '60%',\n  },\n  [theme.breakpoints.down('sm')]: {\n    root: {\n      width: '80%',\n    },\n  },\n  [theme.breakpoints.down('xs')]: {\n    buttons: {\n      marginTop: '1rem',\n    },\n  },\n}));\n\nconst VinInput = (props: { vinParam?: any }) => {\n  const { vinParam } = props;\n  const [vin, setVin] = useState(vinParam || '');\n  const [requestError, setRequestError] = useState(false);\n\n  const {\n    setCarData, setLoading, useMock, setUseMock,\n  } = useContext(CarContext);\n  const { setOpen, setMessage } = useContext(MessageContext);\n\n  const classes = useStyles();\n\n  const vinHandler = (vinFieldValue: string) => {\n    setVin(vinFieldValue.trim());\n  };\n\n  const getCarInfo = () => {\n    if (vin || useMock) {\n      setLoading(true);\n      setCarData({});\n      getAllData(vin, useMock)\n        .then((res) => {\n          console.log(res);\n          setCarData(res);\n          setRequestError(false);\n        })\n        .catch(() => {\n          setRequestError(true);\n          setOpen(true);\n          setMessage('Please, check your VIN. Request error occurred');\n        })\n        .finally(() => setLoading(false));\n    } else {\n      setRequestError(true);\n    }\n  };\n\n  const toggleMockData = () => {\n    setUseMock(!useMock);\n    setOpen(true);\n\n    if (useMock) {\n      setMessage('Real API data will be used');\n    } else {\n      setMessage('Mock data shall be used instead of the real API');\n    }\n  };\n\n  useEffect(() => {\n    if (vinParam) getCarInfo();\n  }, [vinParam]);\n\n  return (\n    <div className={classes.root}>\n      <Grid container justify=\"center\">\n        <Typography variant=\"h4\">\n          Please enter your VIN code\n        </Typography>\n      </Grid>\n      <Grid container justify=\"space-between\" alignItems=\"center\">\n        <Grid item sm={6} xs={12}>\n          <TextField\n            id=\"vin\"\n            variant=\"outlined\"\n            label=\"VIN\"\n            required\n            helperText={requestError ? 'Incorrect VIN' : ''}\n            error={requestError}\n            value={vin}\n            onChange={(e) => vinHandler(e.target.value)}\n          />\n        </Grid>\n        <Grid item sm={6} xs={12} className={classes.buttons}>\n          <ButtonGroup size=\"medium\">\n            <Button variant=\"contained\" color=\"primary\" size=\"medium\" onClick={() => getCarInfo()}>Get Info</Button>\n            <Button variant={useMock ? 'contained' : 'outlined'} color=\"secondary\" size=\"medium\" onClick={() => toggleMockData()}>\n              { useMock ? 'Use API' : 'Use Mock' }\n            </Button>\n          </ButtonGroup>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default VinInput;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport unknown from '../../../assets/images/cars/unknown.png';\nimport ynl from '../../../assets/images/cars/YNL.png';\nimport yqz from '../../../assets/images/cars/YQZ.png';\nimport yqy from '../../../assets/images/cars/YQY.png';\n// import i369 from '../../assets/images/i369.png';\n// import i676 from '../../assets/images/i676.png';\nimport d17 from '../../../assets/images/cars/D17.png';\nimport d69 from '../../../assets/images/cars/D69.png';\nimport kad from '../../../assets/images/cars/KAD.png';\nimport npi from '../../../assets/images/cars/NPI.png';\nimport rqh from '../../../assets/images/cars/RQH.png';\nimport xtk from '../../../assets/images/cars/XTK.png';\nimport xtl from '../../../assets/images/cars/XTL.png';\nimport xtm from '../../../assets/images/cars/XTM.png';\nimport xtn from '../../../assets/images/cars/XTN.png';\nimport xtp from '../../../assets/images/cars/XTP.png';\nimport xtr from '../../../assets/images/cars/XTR.png';\nimport xue from '../../../assets/images/cars/XUE.png';\nimport xvq from '../../../assets/images/cars/XVQ.png';\nimport ynn from '../../../assets/images/cars/YNN.png';\nimport yqx from '../../../assets/images/cars/YQX.png';\nimport yra from '../../../assets/images/cars/YRA.png';\nimport yrb from '../../../assets/images/cars/YRB.png';\nimport yrc from '../../../assets/images/cars/YRC.png';\n\nconst images: any = {\n  yqy,\n  ynl,\n  yqz,\n  // i369,\n  // i676,\n  d17,\n  d69,\n  kad,\n  npi,\n  rqh,\n  xtk,\n  xtl,\n  xtm,\n  xtn,\n  xtp,\n  xtr,\n  xue,\n  xvq,\n  ynn,\n  yqx,\n  yra,\n  yrb,\n  yrc,\n};\n\nconst useStyles = makeStyles({\n  carImage: {\n    maxWidth: '100%',\n    maxHeight: '12rem',\n  },\n});\n\nconst CarImage = (props: any) => {\n  const { carColor } = props;\n  const classes = useStyles();\n\n  return (\n    <figure>\n      <img className={classes.carImage} src={images[carColor.toLowerCase()] || unknown} alt=\"You car\" />\n    </figure>\n  );\n};\n\nexport default CarImage;\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Icon, Typography } from '@material-ui/core';\nimport CarContext from '../../../contexts/CarContext';\n\nconst useStyles = makeStyles({\n  passed: {\n    color: 'green',\n  },\n  stepsContainer: {\n    padding: '0 2rem',\n  },\n  step: {\n    display: 'flex',\n    justifyItems: 'center',\n    padding: '.25rem 0',\n  },\n});\n\nconst CarStatus = () => {\n  const { carData } = useContext(CarContext);\n  const classes = useStyles();\n  const { status } = carData[0];\n  const steps = ['Order confirmed', 'Car ready', 'Car ready 2', 'On it\\'s way to dealer',\n    'Delivered to dealer', 'Received by customer'/* , 'Making PTS', 'PTS ready' */];\n\n  return (\n    <div>\n      <Typography variant=\"h4\" gutterBottom>Detailed status of your order:</Typography>\n      <Grid container className={classes.stepsContainer} justify=\"center\">\n        {steps.map((item, index) => (\n          <Grid item xs={12} sm={6} md={4} key={item} className={index < status ? classes.passed : ''}>\n            <div className={classes.step}>\n              {index < status && <Icon>check_circle_outline</Icon>}\n              {index >= status && <Icon>highlight_off</Icon>}\n              {` Step ${index + 1}: ${item}`}\n            </div>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default CarStatus;\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { CircularProgress, Grid } from '@material-ui/core';\nimport CarImage from './CarImage/CarImage';\nimport CarContext from '../../contexts/CarContext';\nimport CarStatus from './CarStatus/CarStatus';\nimport MessageContext from '../../contexts/MessageContext';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function CarCard() {\n  const classes = useStyles();\n  const { carData, loading } = useContext(CarContext);\n  const { setOpen, setMessage } = useContext(MessageContext);\n\n  const telegramBotSubscribe = () => {\n    setOpen(true);\n    setMessage('Telegram bot is not available yet');\n  };\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      {loading && <CircularProgress />}\n      {!loading && carData.length && (\n      <CardContent>\n        <Grid container>\n          <Grid item xs={12} md={6}>\n            <Typography className={classes.root} align=\"left\" color=\"textPrimary\" gutterBottom>\n              Order information\n            </Typography>\n            <hr />\n            <Typography className={classes.title} align=\"left\" color=\"textSecondary\" gutterBottom>\n              Your car color is\n              {' '}\n              { carData[1].color}\n            </Typography>\n            <Typography className={classes.title} align=\"left\" color=\"textSecondary\" gutterBottom>\n              Your car model is Renault\n              {' '}\n              { carData[1].model }\n              {' '}\n              { carData[1].version.replace(/_/g, ' ') }\n            </Typography>\n            <Typography className={classes.title} align=\"left\" color=\"textSecondary\" gutterBottom>\n              Expected time of production\n              {' '}\n              { new Date(carData[2].realdt).toDateString() }\n              {' '}\n              { new Date(carData[2].realdt).toTimeString() }\n            </Typography>\n            <Typography className={classes.title} align=\"left\" color=\"textSecondary\" gutterBottom>\n              Planned time of production\n              {' '}\n              { new Date(carData[2].plandt).toDateString() }\n              {' '}\n              { new Date(carData[2].plandt).toTimeString() }\n            </Typography>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <CarImage carColor={carData[1].color} />\n          </Grid>\n        </Grid>\n        <Grid container alignContent=\"center\" justify=\"center\">\n          <Grid item xs={12}>\n            <CarStatus />\n          </Grid>\n        </Grid>\n      </CardContent>\n      )}\n      {!loading && !carData.length && <h1>No car data</h1>}\n      {!loading && carData.length && (\n      <CardActions>\n        <Button size=\"small\" style={{ margin: '0 auto' }} variant=\"outlined\" onClick={telegramBotSubscribe}>\n          Subscribe to telegram bot\n        </Button>\n      </CardActions>\n      )}\n    </Card>\n  );\n}\n","import { useLocation } from 'react-router-dom';\n\nconst useQuery = () => new URLSearchParams(useLocation().search);\n\nexport default useQuery;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport VinInput from '../components/VinInput/VinInput';\nimport CarCard from '../components/CarCard/CarCard';\nimport useQuery from '../hooks/query';\n\nconst useStyles = makeStyles({\n  vinHeader: {\n    padding: '0 0 1rem',\n  },\n});\n\nconst CarPage = () => {\n  const classes = useStyles();\n  const query = useQuery();\n\n  return (\n    <div className=\"App\">\n      <Grid container className={classes.vinHeader} alignContent=\"center\" justify=\"center\">\n        <VinInput vinParam={query.get('vin')} />\n      </Grid>\n      <Grid container justify=\"center\" alignContent=\"center\">\n        <CarCard />\n      </Grid>\n    </div>\n  );\n};\n\nexport default CarPage;\n","import React, { useState } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router, Switch, Route,\n} from 'react-router-dom';\n\nimport CarContext from './contexts/CarContext';\nimport MessageContext from './contexts/MessageContext';\n\nimport Footer from './components/Footer/Footer';\nimport RosSnackbar from './components/RosSnackbar/RosSnackbar';\nimport CarPage from './pages/CarPage';\n\nfunction App() {\n  const [carData, setCarData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [useMock, setUseMock] = useState(false);\n  const [openMessage, setOpenMessage] = useState(false);\n  const [messageValue, setMessageValue] = useState('');\n  const carContextValue = {\n    loading, carData, useMock, setCarData, setLoading, setUseMock,\n  };\n  const messageContextValue = {\n    open: openMessage, message: messageValue, setOpen: setOpenMessage, setMessage: setMessageValue,\n  };\n\n  return (\n    <MessageContext.Provider value={messageContextValue}>\n      <CarContext.Provider value={carContextValue as any}>\n        <Router>\n          <Switch>\n            <Route path=\"/\">\n              <CarPage />\n            </Route>\n          </Switch>\n          <Footer />\n          <RosSnackbar />\n        </Router>\n      </CarContext.Provider>\n    </MessageContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/unknown.49d99b9f.png\";","module.exports = __webpack_public_path__ + \"static/media/YNL.6955fcb6.png\";","module.exports = __webpack_public_path__ + \"static/media/YQZ.8314be94.png\";","module.exports = __webpack_public_path__ + \"static/media/YQY.ddfee3ae.png\";","module.exports = __webpack_public_path__ + \"static/media/D17.c393476d.png\";","module.exports = __webpack_public_path__ + \"static/media/D69.da680879.png\";","module.exports = __webpack_public_path__ + \"static/media/KAD.64992532.png\";","module.exports = __webpack_public_path__ + \"static/media/NPI.8b143404.png\";","module.exports = __webpack_public_path__ + \"static/media/RQH.ddd1999f.png\";","module.exports = __webpack_public_path__ + \"static/media/XTK.6ffc23b3.png\";","module.exports = __webpack_public_path__ + \"static/media/XTL.ca4c1e4c.png\";","module.exports = __webpack_public_path__ + \"static/media/XTM.2d467ac1.png\";","module.exports = __webpack_public_path__ + \"static/media/XTN.9ac98779.png\";","module.exports = __webpack_public_path__ + \"static/media/XTP.a4f80941.png\";","module.exports = __webpack_public_path__ + \"static/media/XTR.1674ec61.png\";","module.exports = __webpack_public_path__ + \"static/media/XUE.05aeb129.png\";","module.exports = __webpack_public_path__ + \"static/media/XVQ.002ac380.png\";","module.exports = __webpack_public_path__ + \"static/media/YNN.fdf20c06.png\";","module.exports = __webpack_public_path__ + \"static/media/YQX.070b4158.png\";","module.exports = __webpack_public_path__ + \"static/media/YRA.ca8584ce.png\";","module.exports = __webpack_public_path__ + \"static/media/YRB.203f1210.png\";","module.exports = __webpack_public_path__ + \"static/media/YRC.0a26def1.png\";"],"sourceRoot":""}